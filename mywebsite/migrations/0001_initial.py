# Generated by Django 5.2 on 2025-06-16 13:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('category', models.CharField(choices=[('motor', 'Motor Insurance'), ('health', 'Health Insurance'), ('life', 'Life Insurance'), ('property', 'Property Insurance'), ('marine', 'Marine Insurance'), ('aviation', 'Aviation Insurance'), ('liability', 'Liability Insurance'), ('travel', 'Travel Insurance'), ('agriculture', 'Agriculture Insurance')], max_length=20)),
                ('description', models.TextField()),
                ('minimum_premium', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('maximum_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('decimal', 'Decimal'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('admin', 'Administrator'), ('agent', 'Insurance Agent'), ('underwriter', 'Underwriter'), ('claims_officer', 'Claims Officer'), ('customer_service', 'Customer Service'), ('finance', 'Finance Officer')], default='agent', max_length=20)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('employee_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('approve', 'Approve'), ('decline', 'Decline'), ('payment', 'Payment'), ('login', 'Login'), ('logout', 'Logout')], max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('address', models.TextField()),
                ('county', models.CharField(max_length=50)),
                ('town', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_branches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mywebsite.branch'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('claim_number', models.CharField(max_length=30, unique=True)),
                ('claim_type', models.CharField(choices=[('total_loss', 'Total Loss'), ('partial_loss', 'Partial Loss'), ('theft', 'Theft'), ('accident', 'Accident'), ('medical', 'Medical'), ('death', 'Death'), ('disability', 'Disability'), ('property_damage', 'Property Damage'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('reported', 'Reported'), ('investigating', 'Under Investigation'), ('processing', 'Processing'), ('approved', 'Approved'), ('declined', 'Declined'), ('settled', 'Settled'), ('closed', 'Closed')], default='reported', max_length=20)),
                ('incident_date', models.DateField()),
                ('reported_date', models.DateField(auto_now_add=True)),
                ('incident_description', models.TextField()),
                ('incident_location', models.CharField(max_length=200)),
                ('police_report_number', models.CharField(blank=True, max_length=50)),
                ('claimed_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('assessed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('approved_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('surveyor', models.CharField(blank=True, max_length=100)),
                ('surveyor_report', models.TextField(blank=True)),
                ('decline_reason', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_claims', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClaimDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('document_type', models.CharField(choices=[('police_report', 'Police Report'), ('medical_report', 'Medical Report'), ('repair_estimate', 'Repair Estimate'), ('photos', 'Photos'), ('receipts', 'Receipts'), ('death_certificate', 'Death Certificate'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='claim_documents/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='mywebsite.claim')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_number', models.CharField(max_length=20, unique=True)),
                ('customer_type', models.CharField(choices=[('individual', 'Individual'), ('corporate', 'Corporate')], max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('kra_pin', models.CharField(blank=True, max_length=20)),
                ('business_type', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('postal_address', models.CharField(max_length=200)),
                ('physical_address', models.TextField()),
                ('county', models.CharField(max_length=50)),
                ('town', models.CharField(max_length=50)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mywebsite.branch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('policy_number', models.CharField(max_length=30, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended'), ('lapsed', 'Lapsed')], default='draft', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('sum_insured', models.DecimalField(decimal_places=2, max_digits=15)),
                ('payment_frequency', models.CharField(choices=[('annual', 'Annual'), ('semi_annual', 'Semi-Annual'), ('quarterly', 'Quarterly'), ('monthly', 'Monthly')], default='annual', max_length=20)),
                ('policy_conditions', models.TextField(blank=True)),
                ('special_terms', models.TextField(blank=True)),
                ('deductible', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policies', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mywebsite.branch')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='mywebsite.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.insuranceproduct')),
                ('underwriter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='underwritten_policies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('payment_reference', models.CharField(max_length=50, unique=True)),
                ('payment_type', models.CharField(choices=[('premium', 'Premium Payment'), ('claim', 'Claim Payment'), ('refund', 'Refund'), ('commission', 'Commission')], max_length=20)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('card', 'Credit/Debit Card'), ('online', 'Online Payment')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('mpesa_receipt', models.CharField(blank=True, max_length=50)),
                ('cheque_number', models.CharField(blank=True, max_length=50)),
                ('bank_reference', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateTimeField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('claim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='mywebsite.claim')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='mywebsite.customer')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='mywebsite.policy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('calculated', 'Calculated'), ('approved', 'Approved'), ('paid', 'Paid'), ('disputed', 'Disputed')], default='calculated', max_length=20)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_commissions', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.payment')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions', to='mywebsite.policy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='claim',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='mywebsite.policy'),
        ),
        migrations.CreateModel(
            name='PolicyBenefit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('benefit_name', models.CharField(max_length=100)),
                ('coverage_limit', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField(blank=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='mywebsite.policy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyRider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rider_name', models.CharField(max_length=100)),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField(blank=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='riders', to='mywebsite.policy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quotation_number', models.CharField(max_length=30, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('converted', 'Converted to Policy')], default='draft', max_length=20)),
                ('valid_until', models.DateField()),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('sum_insured', models.DecimalField(decimal_places=2, max_digits=15)),
                ('terms_conditions', models.TextField(blank=True)),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quotations', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='mywebsite.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.insuranceproduct')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReinsuranceContract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('contract_number', models.CharField(max_length=30, unique=True)),
                ('reinsurer_name', models.CharField(max_length=100)),
                ('contract_type', models.CharField(choices=[('quota_share', 'Quota Share'), ('surplus', 'Surplus'), ('excess_of_loss', 'Excess of Loss'), ('stop_loss', 'Stop Loss')], max_length=20)),
                ('effective_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('retention_limit', models.DecimalField(decimal_places=2, max_digits=15)),
                ('reinsurance_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('terms_conditions', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mywebsite.insuranceproduct')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('vehicle_make', models.CharField(blank=True, max_length=50)),
                ('vehicle_model', models.CharField(blank=True, max_length=50)),
                ('vehicle_year', models.IntegerField(blank=True, null=True)),
                ('vehicle_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=20)),
                ('engine_number', models.CharField(blank=True, max_length=50)),
                ('chassis_number', models.CharField(blank=True, max_length=50)),
                ('driver_age', models.IntegerField(blank=True, null=True)),
                ('driving_experience', models.IntegerField(blank=True, help_text='Years of driving experience', null=True)),
                ('previous_claims', models.IntegerField(default=0)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('risk_category', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], default='medium', max_length=20)),
                ('medical_report_required', models.BooleanField(default=False)),
                ('property_inspection_required', models.BooleanField(default=False)),
                ('additional_requirements', models.TextField(blank=True)),
                ('policy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessment', to='mywebsite.policy')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
